## License: Apache 2.0. See LICENSE file in root directory.
## Copyright(c) 2015-2017 Intel Corporation. All Rights Reserved.

###############################################
##      Open CV and Numpy integration        ##
###############################################


import pyrealsense2 as rs
import numpy as np
import cv2

camera1 = "909512070385"
camera2 = "912112071545"


pipeline1 = rs.pipeline()
config1 = rs.config()
config1.enable_device(camera1)
config1.enable_stream(rs.stream.depth, 640, 480, rs.format.z16, 30)
config1.enable_stream(rs.stream.color, 640, 480, rs.format.bgr8, 30)
align1 = rs.align(rs.stream.color)

pipeline2 = rs.pipeline()
config2 = rs.config()
config2.enable_device(camera2)
config2.enable_stream(rs.stream.depth, 640, 480, rs.format.z16, 30)
config2.enable_stream(rs.stream.color, 640, 480, rs.format.bgr8, 30)
align2 = rs.align(rs.stream.color)

try:
    pipeline1.start(config1)
    pipeline2.start(config2)
    while True:
        frames1 = pipeline1.wait_for_frames()
        aligned_frames1 = align1.process(frames1)
        color_frame1 = aligned_frames1.get_color_frame()
        depth_frame1 = aligned_frames1.get_depth_frame()

        frames2 = pipeline2.wait_for_frames()
        aligned_frames2 = align2.process(frames2)
        color_frame2 = aligned_frames2.get_color_frame()
        depth_frame2 = aligned_frames2.get_depth_frame()

        color_image1 = np.asanyarray(color_frame1.get_data())
        depth_image1 = np.asanyarray(depth_frame1.get_data())
        color_image2 = np.asanyarray(color_frame2.get_data())
        depth_image2 = np.asanyarray(depth_frame2.get_data())

        depth_value1 = depth_frame1.get_distance(320,240)
        print(f"Depth1: {depth_value1:0.3f} meters")

        depth_value2 = depth_frame2.get_distance(320,240)
        print(f"Depth2: {depth_value2:0.3f} meters")

        depth_colormap1 = cv2.applyColorMap(cv2.convertScaleAbs(depth_image1, alpha=0.03), cv2.COLORMAP_JET)
        depth_colormap2 = cv2.applyColorMap(cv2.convertScaleAbs(depth_image2, alpha=0.03), cv2.COLORMAP_JET)

        combined_color = np.hstack((color_image1, color_image2, depth_colormap1, depth_colormap2))

        cv2.namedWindow('Colormap and Cameras', cv2.WINDOW_AUTOSIZE)
        cv2.imshow('Colormap and Cameras', combined_color)
        cv2.circle(color_image1, (320,240), 5, (0,255,0), 5)
        cv2.circle(color_image2, (320,240), 5, (0,255,0), 5)

        key = cv2.waitKey(1)
        if key & 0xFF == ord('q') or key == 27:
            break

finally:
    print("Stopping Camera 1 pipeline...")
    pipeline1.stop()
    print("Stopping Camera 2 pipeline...")
    pipeline2.stop()
    cv2.destroyAllWindows()
    print("All pipelines stopped and windows closed.")


